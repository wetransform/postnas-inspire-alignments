diff --git a/projects/tn-ra-auto.halex.alignment.xml b/projects/tn-ra-manual.halex.alignment.xml
index 8e023f3..c16270a 100644
--- a/projects/tn-ra-auto.halex.alignment.xml
+++ b/projects/tn-ra-manual.halex.alignment.xml
@@ -66,7 +66,6 @@ Nur erfolgreich falls genau eine Simple Feature Geometrie gebildet werden kann.
         <cf:custom-property-function xmlns:cf="http://www.esdi-humboldt.eu/hale/custom-function" identifier="adv.inspire.AX_Lagebezeichnung.GeographicalName" name="AX_Lagebezeichnung zu GeographicalName" type="groovy">
             <cf:input eager="false" maxOccurs="1" minOccurs="1" name="lagebezeichnung">
                 <cf:binding>java.lang.String</cf:binding>
-                <cf:type name="AX_LagebezeichnungType" ns="http://www.adv-online.de/namespaces/adv/gid/7.1"/>
             </cf:input>
             <cf:input eager="false" maxOccurs="1" minOccurs="0" name="source">
                 <cf:binding>java.lang.String</cf:binding>
@@ -279,7 +278,6 @@ if (_params.source) {&#13;&#13;
             </cf:input>
             <cf:input eager="true" maxOccurs="1" minOccurs="0" name="source">
                 <cf:binding>java.lang.String</cf:binding>
-                <cf:type name="AA_ModellartPropertyType" ns="http://www.adv-online.de/namespaces/adv/gid/7.1"/>
             </cf:input>
             <cf:output eager="false" maxOccurs="1" minOccurs="1">
                 <cf:type name="GeographicalNameType" ns="http://inspire.ec.europa.eu/schemas/gn/4.0"/>
@@ -500,9 +498,26 @@ values = values.collect { value -&gt;
 	//	result = value
 	//}
 	//TODO also support parsing based on provided pattern?
+	
+	if (result == null) {
+		//try block to make sure the function is not cancelled in case an error occurs
+		try {
+			//specific format reported by RLP
+			result = Date.parse("yyyy-MM-dd'T'HH:mm:ss", value)
+		}
+		catch (e) {
+  			// ignore, try next variant
+  		}
+	}
 	if (result == null) {
 		// try hale conversion
-		result = _.convert(value: value, to: Date)
+				//try block to make sure the function is not cancelled in case an error occurs
+		try{
+			result = _.convert(value: value, to: Date)
+		}
+		catch (e) {
+  			// ignore, try next variant
+  		}
 	}
 	if (result == null) {
 		result = value as Date
@@ -781,7 +796,7 @@ Aktuell ist folgende Abbildung umgesetzt:
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 def bwf = _source.p.bauwerksfunktion.value()
-def identifier = _source.p.identifier.value()
+def identifier = _source.p.gml_id.value()
 
 withTransformationContext {
   def collect = _.context.collector(it)
@@ -815,7 +830,7 @@ Diese Information wird herangezogen um entsprechend für REO-Objekte über die B
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 def bwf = _source.p.bauwerksfunktion.value()
-def identifier = _source.p.identifier.value()
+def identifier = _source.p.gml_id.value()
 
 withTransformationContext {
   def collect = _.context.collector(it)
@@ -1105,7 +1120,7 @@ withTransformationContext {
 	collect = _.context.collector(it)
 }
 
-def _id = 'RailwayArea_' + _source.p.id.value() 
+def _id = 'RailwayArea_' + _source.p.gml_id.value() 
 
 _target {
 }
@@ -1113,7 +1128,7 @@ _target {
 // bestimme RailwayType(s)
 def railwayTypes = []
 _source.p.bahnkategorie.each { bkt -&gt;
-	switch (bkt) {
+	switch (bkt as String) {
 	case '1100': // Eisenbahn
 	case '1101': // Personenverkehr
 	case '1102': // Güterverkehr
@@ -1145,7 +1160,7 @@ _source.p.bahnkategorie.each { bkt -&gt;
 
 // bestimme ConditionOfFacility
 def conditionOfFacility = 'functional'
-switch (_source.p.zustand.value()) {
+switch (_source.p.zustand.value() as String) {
 case '2100': // Außer Betrieb, stillgelegt, verlassen
 	conditionOfFacility = 'disused'
 	break
@@ -1160,9 +1175,9 @@ case '8000': // Im Bau
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -1545,7 +1560,7 @@ _target {
 // ID zum hinterlegen in Indizes bestimmen
 
 // alle Quell-IDs als Liste
-def identifiers = _source.p.id.values()
+def identifiers = _source.p.gml_id.values()
 
 def _id
 
@@ -1917,7 +1932,7 @@ _target {
 
 // bestimme NominalTrackGauge
 def nominalTrackGauge
-switch (_source.p.spurweite.value()) {
+switch (_source.p.spurweite.value() as String) {
 case '1000': // Normalspur (Regelspur, Vollspur)
 	nominalTrackGauge = 'standard'
 	break
@@ -1932,7 +1947,7 @@ case '3000': // Breitspur
 // bestimme RailwayType(s)
 def railwayTypes = []
 _source.p.bahnkategorie.each { bkt -&gt;
-	switch (bkt) {
+	switch (bkt as String) {
 	case '1100': // Eisenbahn
 	case '1101': // Personenverkehr
 	case '1102': // Güterverkehr
@@ -1964,7 +1979,7 @@ _source.p.bahnkategorie.each { bkt -&gt;
 // bestimme RailwayUse(s)
 def railwayUses = []
 _source.p.bahnkategorie.each { bkt -&gt;
-	switch (bkt) {
+	switch (bkt as String) {
 	case '1100': // Eisenbahn
 	case '1300': // Seilbahn, Bergbahn
 	case '1302': // Standseilbahn
@@ -1989,7 +2004,7 @@ _source.p.bahnkategorie.each { bkt -&gt;
 
 // bestimme NumberOfTracks
 def numberOfTracks
-switch (_source.p.anzahlDerStreckengleise.value()) {
+switch (_source.p.anzahlDerStreckengleise.value() as String) {
 case '1000': // Eingleisig
 	numberOfTracks = 1
 	break
@@ -1999,11 +2014,11 @@ case '2000': // Zweigleisig
 }
 
 // bestimme RailwayElectrification
-def electrified = _source.p.elektrifizierung.value() != '2000'
+def electrified = (_source.p.elektrifizierung.value() as String) != '2000'
 
 // bestimme ConditionOfFacility
 def conditionOfFacility = 'functional'
-switch (_source.p.zustand.value()) {
+switch (_source.p.zustand.value() as String) {
 case '2100': // Außer Betrieb, stillgelegt, verlassen
 	conditionOfFacility = 'disused'
 	break
@@ -2015,9 +2030,9 @@ case '4000': // Im Bau
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -2067,7 +2082,7 @@ else {
 }
 
 // ID zum hinterlegen in Indizes
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 def _id = "RailwayLink_${sourceId}"
 
 // Sammle ID für Netzwerk
@@ -2236,7 +2251,7 @@ withTransformationContext {
 }
 
 // nur Objekt mit linienartigen Geometrien behandeln
-def geometries = _.geom.findLines(_source.p.position.first())
+def geometries = _.geom.findLines(_source.p.wkb_geometry.value())
 
 // Ziel unterstützt keine MultiLineStrings
 def curves = _.geom.toSimpleGeometries(geometries: geometries, collections: false)
@@ -2245,7 +2260,7 @@ def curves = _.geom.toSimpleGeometries(geometries: geometries, collections: fals
 // - Zuweisung der Geometrie auf Ebene von geometry zulassen
 _b.strictValueFlags = false
 
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 // bestimme RailwayType
 def railwayType = 'suspendedRail'
@@ -2253,9 +2268,9 @@ def railwayType = 'suspendedRail'
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -2676,13 +2691,13 @@ withTransformationContext {
 }
 
 // Objekte mit flächenartigen Geometrien behandeln
-def areaGeometries = _.geom.findPolygons(_source.p.position.first()) ?: []
+def areaGeometries = _.geom.findPolygons(_source.p.wkb_geometry.value()) ?: []
 
 // Objekte mit punkartigen Geometrien behandeln
 // Um Probleme mit der Validierung zu verhindern (Knoten werden am Ende von Kanten erwartet),
 // werden in diesem Fall in Absprache mit der AdV aus den Punktgeometrien Pseudokreisflächen
 // mit einem Flächeninhalt von &gt;=0,5 ha erzeugt.
-def pointGeometries = _.geom.findPoints(_source.p.position.first()) ?: []
+def pointGeometries = _.geom.findPoints(_source.p.wkb_geometry.value()) ?: []
 pointGeometries.each { geo -&gt;
 	// Radius von 40.1 m führt zu gefordertem Flächeninhalt von &gt;=0,5 ha. Der sich mathematisch ergebende Radius
 	// von ~39.9 m reicht aufgrund geometrischer Ungenauigkeiten nicht aus.
@@ -2697,11 +2712,11 @@ def surfaces = _.geom.splitMulti(areaGeometries)
 _b.strictValueFlags = false
 
 // Identifier des Quell-Objekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 // bestimme ConditionOfFacility
 def conditionOfFacility = 'functional'
-switch (_source.p.zustand.value()) {
+switch (_source.p.zustand.value() as String) {
 case '2100': // Außer Betrieb, stillgelegt, verlassen
 	conditionOfFacility = 'disused'
 	break
@@ -2713,9 +2728,9 @@ case '4000': // Im Bau
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -3483,37 +3498,13 @@ collect.verticalPosition.consume { key, values -&gt;
         <parameter value="other:unpopulated" name="value"/>
         <documentation>Diese Information ist im 3A-Modell nicht vorhanden.</documentation>
     </cell>
-    <modifier cell="C48d3be90-5843-4323-bd79-ba1928b2429e_C05ddffbf-58b8-489b-b53b-44086656f42f">
-        <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
-    </modifier>
-    <modifier cell="C48d3be90-5843-4323-bd79-ba1928b2429e_C19325fbe-66ff-4f83-9c63-947af27dc065">
-        <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
-    </modifier>
-    <modifier cell="C48d3be90-5843-4323-bd79-ba1928b2429e_C433d8afa-844b-4e56-b6c8-82e369fd15ea">
-        <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
-    </modifier>
     <modifier cell="C48d3be90-5843-4323-bd79-ba1928b2429e_Ca500e629-76b0-4cda-b53f-c9db0c272403">
         <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
     </modifier>
-    <modifier cell="C48d3be90-5843-4323-bd79-ba1928b2429e_Cbdf5128c-1dad-4827-806e-ee6a6fc3cc50">
-        <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
-    </modifier>
     <modifier cell="C4bcaaeda-f8c5-41c5-8efa-bc3a2eaffa51">
         <disable-for parent="C433d8afa-844b-4e56-b6c8-82e369fd15ea"/>
     </modifier>
-    <modifier cell="C92d71e60-b3b7-4864-a6a2-fc6d46d9ac4c_C05ddffbf-58b8-489b-b53b-44086656f42f">
-        <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
-    </modifier>
-    <modifier cell="C92d71e60-b3b7-4864-a6a2-fc6d46d9ac4c_C19325fbe-66ff-4f83-9c63-947af27dc065">
-        <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
-    </modifier>
-    <modifier cell="C92d71e60-b3b7-4864-a6a2-fc6d46d9ac4c_C433d8afa-844b-4e56-b6c8-82e369fd15ea">
-        <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
-    </modifier>
     <modifier cell="C92d71e60-b3b7-4864-a6a2-fc6d46d9ac4c_Ca500e629-76b0-4cda-b53f-c9db0c272403">
         <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
     </modifier>
-    <modifier cell="C92d71e60-b3b7-4864-a6a2-fc6d46d9ac4c_Cbdf5128c-1dad-4827-806e-ee6a6fc3cc50">
-        <disable-for parent="Ca500e629-76b0-4cda-b53f-c9db0c272403"/>
-    </modifier>
 </alignment>
