diff --git a/projects/tn-w-auto.halex.alignment.xml b/projects/tn-w-manual.halex.alignment.xml
index 0ad9b4b..a637c81 100644
--- a/projects/tn-w-auto.halex.alignment.xml
+++ b/projects/tn-w-manual.halex.alignment.xml
@@ -66,7 +66,6 @@ Nur erfolgreich falls genau eine Simple Feature Geometrie gebildet werden kann.
         <cf:custom-property-function xmlns:cf="http://www.esdi-humboldt.eu/hale/custom-function" identifier="adv.inspire.AX_Lagebezeichnung.GeographicalName" name="AX_Lagebezeichnung zu GeographicalName" type="groovy">
             <cf:input eager="false" maxOccurs="1" minOccurs="1" name="lagebezeichnung">
                 <cf:binding>java.lang.String</cf:binding>
-                <cf:type name="AX_LagebezeichnungType" ns="http://www.adv-online.de/namespaces/adv/gid/7.1"/>
             </cf:input>
             <cf:input eager="false" maxOccurs="1" minOccurs="0" name="source">
                 <cf:binding>java.lang.String</cf:binding>
@@ -279,7 +278,6 @@ if (_params.source) {&#13;&#13;
             </cf:input>
             <cf:input eager="true" maxOccurs="1" minOccurs="0" name="source">
                 <cf:binding>java.lang.String</cf:binding>
-                <cf:type name="AA_ModellartPropertyType" ns="http://www.adv-online.de/namespaces/adv/gid/7.1"/>
             </cf:input>
             <cf:output eager="false" maxOccurs="1" minOccurs="1">
                 <cf:type name="GeographicalNameType" ns="http://inspire.ec.europa.eu/schemas/gn/4.0"/>
@@ -781,7 +779,7 @@ Aktuell ist folgende Abbildung umgesetzt:
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 def bwf = _source.p.bauwerksfunktion.value()
-def identifier = _source.p.identifier.value()
+def identifier = _source.p.gml_id.value()
 
 withTransformationContext {
   def collect = _.context.collector(it)
@@ -815,7 +813,7 @@ Diese Information wird herangezogen um entsprechend für REO-Objekte über die B
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 def bwf = _source.p.bauwerksfunktion.value()
-def identifier = _source.p.identifier.value()
+def identifier = _source.p.gml_id.value()
 
 withTransformationContext {
   def collect = _.context.collector(it)
@@ -850,13 +848,13 @@ Diese Information wird herangezogen um entsprechend für REO-Objekte über die B
         </target>
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
-if (!_source.p.position.Point.first()) {
+if (!_.geom.findPoints(_source.p.wkb_geometry.value())) {
 	// Nur Objekte mit Punkt-Geometrien verwenden
 	return
 }
 
 // ID des Quellobjekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 def _id = "Beacon_$sourceId"
 	
@@ -873,9 +871,9 @@ withTransformationContext {
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -997,13 +995,13 @@ Für alle anderen `bauwerksfunktion`en, Referenzen auf andere Objekte oder auch
         </target>
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
-if (!_source.p.position.Point.first()) {
+if (!_.geom.findPoints(_source.p.wkb_geometry.value())) {
 	// Nur Objekte mit Punkt-Geometrien verwenden
 	return
 }
 
 // ID des Quellobjekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 def _id = "Beacon_$sourceId"
 	
@@ -1020,9 +1018,9 @@ withTransformationContext {
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -1733,7 +1731,7 @@ Es werden Referenzen (NetworkReference) zu allen Netzwerk-Elementen (z.B. `Water
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 // ID des Quell-Objekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 def collect
 withTransformationContext {
@@ -1747,7 +1745,7 @@ def _id = "FerryCrossing_$sourceId"
 
 // bestimme FerryUse
 def ferryUse
-switch (_source.p.art.value()) {
+switch (_source.p.art.value() as String) {
 case '1710': // Autofährverkehr
 	ferryUse = 'cars'
 	break
@@ -1781,9 +1779,9 @@ if (links) {
 	/*
 	 * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
 	 */
-	def untenRefs = _source.p.hatDirektUnten.href.values()
+	def untenRefs = _source.p.hatdirektunten.values()
 	def verticalPositions = untenRefs.findResults { identifier -&gt;
-		def bwf = collect.bauwerksfunktion[identifier].value()
+		def bwf = collect.bauwerksfunktion[identifier].value() as String
 		if (bwf) {
 			switch (bwf) {
 			// AX_BauwerkImVerkehrsbereich
@@ -2141,7 +2139,7 @@ Es werden Referenzen (NetworkReference) zu allen `FerryCrossing`s erstellt, welc
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 // ID des Quell-Objekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 def collect
 withTransformationContext {
@@ -2209,7 +2207,7 @@ Der erstellte `InlandWaterway` wird dem Index von Netzwerk-Elementen hinzugefüg
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 // ID des Quell-Objekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 def collect
 withTransformationContext {
@@ -2637,13 +2635,13 @@ Dazu wird die vorgegebene ID für das Netzwerk verwendet (Projekt-Variable).</do
         </target>
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
-if (!_source.p.position.Point.first()) {
+if (!_.geom.findPoints(_source.p.wkb_geometry.value())) {
 	// Nur Objekte mit Punkt-Geometrien verwenden
 	return
 }
 
 // ID des Quellobjekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 def _id = "MarkerPost_$sourceId"
 	
@@ -2660,9 +2658,9 @@ withTransformationContext {
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -3007,16 +3005,7 @@ Dazu wird die vorgegebene ID für das Netzwerk verwendet (Projekt-Variable).</do
             </core:message>
         </annotation>
     </cell>
-    <cell relation="custom:alignment:adv.uom.toucum" id="Cf3eb9a99-85bb-4077-bf11-23888bc6e0c9" priority="normal">
-        <source name="uom">
-            <property>
-                <type name="AX_EinrichtungenFuerDenSchiffsverkehrType" ns="http://www.adv-online.de/namespaces/adv/gid/7.1">
-                    <condition lang="CQL">art = '1430' and kilometerangabe is not null</condition>
-                </type>
-                <child name="kilometerangabe" ns="http://www.adv-online.de/namespaces/adv/gid/7.1"/>
-                <child name="uom"/>
-            </property>
-        </source>
+    <cell relation="eu.esdihumboldt.hale.align.assign" id="C7a0e022a-cddb-48cf-ad3f-1190ce199055" priority="normal">
         <target>
             <property>
                 <type name="MarkerPostType" ns="http://inspire.ec.europa.eu/schemas/tn/4.0"/>
@@ -3024,6 +3013,7 @@ Dazu wird die vorgegebene ID für das Netzwerk verwendet (Projekt-Variable).</do
                 <child name="uom"/>
             </property>
         </target>
+        <parameter value="km" name="value"/>
         <annotation type="message">
             <core:message xmlns:core="http://www.esdi-humboldt.eu/hale/core" category="migration">
                 <core:content>
@@ -3078,7 +3068,7 @@ Dazu wird die vorgegebene ID für das Netzwerk verwendet (Projekt-Variable).</do
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 // ID des Quellobjekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 def _id = "PortArea_$sourceId"
 	
@@ -3087,7 +3077,7 @@ _target {
 
 // bestimme ConditionOfWaterFacility
 def conditionOfFacility = 'functional'
-switch (_source.p.zustand.value()) {
+switch (_source.p.zustand.value() as String) {
 	case '2100': // Außer Betrieb, stillgelegt, verlassen
 		conditionOfFacility = 'disused'
 		break
@@ -3108,9 +3098,9 @@ withTransformationContext {
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -3752,10 +3742,10 @@ collect.verticalPosition.consume { key, values -&gt;
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 // ID des Quell-Objekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 // ID des Quell-Kanals
-def parentId = _source.links.AX_Kanal.p.id.value()
+def parentId = _source.links.ax_kanal.p.gml_id.value()
 
 if (parentId) {
 	// nur falls ein Kanal verfügbar ist, der die entsprechenden Bedingungen erfüllt
@@ -3768,7 +3758,7 @@ if (parentId) {
 	
 	// bestimme ConditionOfFacility
 	def conditionOfFacility = 'functional'
-	switch (_source.p.zustand.value()) {
+	switch (_source.p.zustand.value() as String) {
 	case '2100': // Außer Betrieb, stillgelegt, verlassen
 		conditionOfFacility = 'disused'
 		break
@@ -3791,9 +3781,9 @@ if (parentId) {
 	/*
 	 * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
 	 */
-	def untenRefs = _source.p.hatDirektUnten.href.values()
+	def untenRefs = _source.p.hatdirektunten.values()
 	def verticalPositions = untenRefs.findResults { identifier -&gt;
-		def bwf = collect.bauwerksfunktion[identifier].value()
+		def bwf = collect.bauwerksfunktion[identifier].value() as String
 		if (bwf) {
 			switch (bwf) {
 			// AX_BauwerkImVerkehrsbereich
@@ -3959,10 +3949,10 @@ Für alle anderen `bauwerksfunktion`en, Referenzen auf andere Objekte oder auch
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 // ID des Quell-Objekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 // ID des Quell-Wasserlaufs
-def parentId = _source.links.AX_Wasserlauf.p.id.value()
+def parentId = _source.links.ax_wasserlauf.p.gml_id.value()
 
 if (parentId) {
 	// nur falls ein Wasserlauf verfügbar ist, der die entsprechenden Bedingungen erfüllt
@@ -3985,9 +3975,9 @@ if (parentId) {
 	/*
 	 * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
 	 */
-	def untenRefs = _source.p.hatDirektUnten.href.values()
+	def untenRefs = _source.p.hatdirektunten.values()
 	def verticalPositions = untenRefs.findResults { identifier -&gt;
-		def bwf = collect.bauwerksfunktion[identifier].value()
+		def bwf = collect.bauwerksfunktion[identifier].value() as String
 		if (bwf) {
 			switch (bwf) {
 			// AX_BauwerkImVerkehrsbereich
@@ -4111,7 +4101,7 @@ Für alle anderen `bauwerksfunktion`en, Referenzen auf andere Objekte oder auch
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 // ID des Quellobjekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
 
 def _id = "WaterwayLink_$sourceId"
 	
@@ -4128,9 +4118,9 @@ withTransformationContext {
 /*
  * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
  */
-def untenRefs = _source.p.hatDirektUnten.href.values()
+def untenRefs = _source.p.hatdirektunten.values()
 def verticalPositions = untenRefs.findResults { identifier -&gt;
-	def bwf = collect.bauwerksfunktion[identifier].value()
+	def bwf = collect.bauwerksfunktion[identifier].value() as String
 	if (bwf) {
 		switch (bwf) {
 		// AX_BauwerkImVerkehrsbereich
@@ -4249,9 +4239,11 @@ Für alle anderen `bauwerksfunktion`en, Referenzen auf andere Objekte oder auch
         <complexParameter name="script">
             <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">
 // ID des Quellobjekts
-def sourceId = _source.p.id.value()
+def sourceId = _source.p.gml_id.value()
+
+def geoms = _.geom.toSimpleGeometries(geometries: _source.p.wkb_geometry.value(), collections: false)
 
-if (_source.p.position.CompositeCurve.first() || _source.p.position.Curve.first() || _source.p.position.LineString.first()) {
+if (geoms &amp;&amp; geoms.size() == 1) {
 	// nur Objekte die durch Curve/LineString oder CompositeCurve dargestellt sind
 	
 	def _id = "WaterwayLink_$sourceId"
@@ -4271,9 +4263,9 @@ if (_source.p.position.CompositeCurve.first() || _source.p.position.Curve.first(
 	/*
 	 * Sammeln von Informationen bzgl. hatDirektUnten für VerticalPosition
 	 */
-	def untenRefs = _source.p.hatDirektUnten.href.values()
+	def untenRefs = _source.p.hatdirektunten.values()
 	def verticalPositions = untenRefs.findResults { identifier -&gt;
-		def bwf = collect.bauwerksfunktion[identifier].value()
+		def bwf = collect.bauwerksfunktion[identifier].value() as String
 		if (bwf) {
 			switch (bwf) {
 			// AX_BauwerkImVerkehrsbereich
@@ -4329,8 +4321,7 @@ else {
 	// das ist die Vorgabe aus der Mapping-Tabelle - heißt das es können keine MultiCurves auftreten?
 	// zur Sicherheit - Warnung falls andere linienartige Geometrie gefunden
 	
-	def geometries = _.geom.findLines(_source.p.position.first())
-	if (geometries) {
+	if (geoms) {
 		_log.warn("AX_SchifffahrtslinieFaehrverkehr $sourceId enthält wider Erwarten linienartige Geometrie die nicht Curve/LineString/CompositeCurve ist, es wurde kein WaterwayLink gebildet")
 	}
 }
@@ -4658,51 +4649,6 @@ Für alle anderen `bauwerksfunktion`en, Referenzen auf andere Objekte oder auch
             </property>
         </target>
     </cell>
-    <cell relation="eu.esdihumboldt.cst.functions.groovy" id="C03716a0b-a2f7-4f4b-8d93-13d186c7af73_C2eb8a251-1062-494b-808f-c7a5771b0b57" priority="normal">
-        <target name="result">
-            <property>
-                <type name="WaterwayLinkType" ns="http://inspire.ec.europa.eu/schemas/tn-w/4.0"/>
-                <child name="inNetwork" ns="http://inspire.ec.europa.eu/schemas/net/4.0"/>
-                <child name="href" ns="http://www.w3.org/1999/xlink"/>
-            </property>
-        </target>
-        <complexParameter name="script">
-            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">'#' + _project.vars.NETWORK_ID</core:text>
-        </complexParameter>
-        <parameter value="false" name="variablesAsInstances"/>
-        <documentation>Verknüpft das Netzwerk-Element mit dem entsprechenden *TransportNetwork*.
-Dazu wird die vorgegebene ID für das Netzwerk verwendet (Projekt-Variable).</documentation>
-    </cell>
-    <cell relation="eu.esdihumboldt.cst.functions.groovy" id="C03716a0b-a2f7-4f4b-8d93-13d186c7af73_C4ce2dafa-0c09-46d1-b006-f8b9d3156e12" priority="normal">
-        <target name="result">
-            <property>
-                <type name="WaterwayLinkType" ns="http://inspire.ec.europa.eu/schemas/tn-w/4.0"/>
-                <child name="inNetwork" ns="http://inspire.ec.europa.eu/schemas/net/4.0"/>
-                <child name="href" ns="http://www.w3.org/1999/xlink"/>
-            </property>
-        </target>
-        <complexParameter name="script">
-            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">'#' + _project.vars.NETWORK_ID</core:text>
-        </complexParameter>
-        <parameter value="false" name="variablesAsInstances"/>
-        <documentation>Verknüpft das Netzwerk-Element mit dem entsprechenden *TransportNetwork*.
-Dazu wird die vorgegebene ID für das Netzwerk verwendet (Projekt-Variable).</documentation>
-    </cell>
-    <cell relation="eu.esdihumboldt.cst.functions.groovy" id="C03716a0b-a2f7-4f4b-8d93-13d186c7af73_Cbd3d5432-25dc-4994-8c8d-d7680a5859e0" priority="normal">
-        <target name="result">
-            <property>
-                <type name="WaterwayLinkType" ns="http://inspire.ec.europa.eu/schemas/tn-w/4.0"/>
-                <child name="inNetwork" ns="http://inspire.ec.europa.eu/schemas/net/4.0"/>
-                <child name="href" ns="http://www.w3.org/1999/xlink"/>
-            </property>
-        </target>
-        <complexParameter name="script">
-            <core:text xmlns:core="http://www.esdi-humboldt.eu/hale/core" xml:space="preserve">'#' + _project.vars.NETWORK_ID</core:text>
-        </complexParameter>
-        <parameter value="false" name="variablesAsInstances"/>
-        <documentation>Verknüpft das Netzwerk-Element mit dem entsprechenden *TransportNetwork*.
-Dazu wird die vorgegebene ID für das Netzwerk verwendet (Projekt-Variable).</documentation>
-    </cell>
     <cell relation="eu.esdihumboldt.cst.functions.groovy" id="C03716a0b-a2f7-4f4b-8d93-13d186c7af73_Cc3026039-7b92-4b52-aaa5-cc40b3749b65" priority="normal">
         <target name="result">
             <property>
